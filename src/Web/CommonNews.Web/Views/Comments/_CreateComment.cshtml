@model CommonNews.Web.ViewModels.Comment.CommentViewModel
<div class="post-comment">
    <h3>Leave a Comment</h3>
    @if (ViewContext.HttpContext.User.IsInRole("Admin") || ViewContext.HttpContext.User.IsInRole("User"))
    {
        using (Html.BeginForm("Create", "Comments", new { id = Model.PostId }, FormMethod.Post, new { id = "add-comment-form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PostId, new { id = "post-id" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, new { @class = "control-label" })
                    <br />
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Content, 8, 80, new { @class = "form-control", id = "comment-form-content" })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    }
    else
    {
        <p>
            Only registered users can comment.
        </p>
    }
</div>